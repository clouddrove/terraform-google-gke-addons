---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`

# Name of this project
name: Terraform GOOGLE GKE ADDONS
# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-google-gke-addons

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/clouddrove/terraform-google-gke-addons.svg"
    url: "https://github.com/clouddrove/terraform-google-gke-addons/releases/latest"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-google-gke-addons/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-google-gke-addons/actions/workflows/tfsec.yml"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"

prerequesties:
  - name: Terraform 1.4.6
    url: https://learn.hashicorp.com/terraform/getting-started/install.html
    
#  description of this project
description: |-
  A Terraform Addons module to customize & install widely used helmchart during or after creation of your Google GKE cluster.
# extra content
include:
  - "terraform.md"

# How to use this project
# How to use this project
usage: |-
  Here are some examples of how you can use this module in your inventory structure:

  ### addons basic example
  ```hcl
    module "addons" {
      source = "clouddrove/gke-addons/google"

      depends_on       = [module.gke]
      gke_cluster_name = module.gke.name
      project_id       = local.gcp_project_id
      region           = local.region

      cluster_autoscaler    = true
      reloader              = true
      ingress_nginx         = true
      certification_manager = true
      keda                  = true
      filebeat              = true
      external_dns          = true
      kubeclarity           = true
      external_secrets      = true
    }
  ```

    ### addons complete example
  ```hcl
    module "addons" {
      source = "clouddrove/gke-addons/google"
  
      gke_cluster_name = module.gke.name
      project_id       = local.gcp_project_id
      region           = local.region
      
      cluster_autoscaler    = true
      reloader              = true
      ingress_nginx         = true
      certification_manager = true
      keda                  = true
      filebeat              = true
      external_dns          = true
      kubeclarity           = true
      external_secrets      = true
  
      # -- Path of override-values.yaml file
      cluster_autoscaler_helm_config    = { values = [file("./config/override-cluster-autoscaler.yaml")] }
      reloader_helm_config              = { values = [file("./config/reloader/override-reloader.yaml")] }
      ingress_nginx_helm_config         = { values = [file("./config/override-ingress-nginx.yaml")] }
      certification_manager_helm_config = { values = [file("./config/override-certification-manager.yaml")] }
      keda_helm_config                  = { values = [file("./config/keda/override-keda.yaml")] }
      filebeat_helm_config              = { values = [file("./config/overide-filebeat.yaml")] }
      external_dns_helm_config          = { values = [file("./config/override-external-dns.yaml")] }
      kubeclarity_helm_config           = { values = [file("./config/override-kubeclarity.yaml")] }
      external_secrets_helm_config      = { values = [file("./config/override-externalsecret.yaml")] }
  
      # -- Override Helm Release attributes
      cluster_autoscaler_extra_configs    = var.cluster_autoscaler_extra_configs
      reloader_extra_configs              = var.reloader_extra_configs
      ingress_nginx_extra_configs         = var.ingress_nginx_extra_configs
      certification_manager_extra_configs = var.certification_manager_extra_configs
      keda_extra_configs                  = var.keda_extra_configs
      filebeat_extra_configs              = var.filebeat_extra_configs
      external_dns_extra_configs          = var.external_dns_extra_configs
      kubeclarity_extra_configs           = var.kubeclarity_extra_configs
      external_secrets_extra_configs      = var.external_secrets_extra_configs
    }
  ```